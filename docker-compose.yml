version: '3'
services: 
  web:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - '.:/usr/src/app'
      - '/usr/src/app/node_modules'
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
    depends_on:
      - server
      - consumer

  server:
    build: .
    command: ['npm', 'run', 'start:server']
    ports:
      - "3001:3001"
    volumes:
      - '.:/usr/src/app'
      - '/usr/src/app/node_modules'
      - ~/.config/:/root/.config
    depends_on:
      - redis
    environment:
      - NODE_ENV=development
    links:
      - redis

  consumer:
    build: .
    command: ['npm', 'run', 'start:consumer']
    volumes:
      - '.:/usr/src/app'
      - '/usr/src/app/node_modules'
      - ~/.config/:/root/.config
    depends_on:
      - server
    environment:
      - NODE_ENV=development
    links:
      - server

  test_thread:
    build: .
    command: ['npm', 'run', 'test:thread']
    volumes:
      - '.:/usr/src/app'
      - '/usr/src/app/node_modules'
      - ~/.config/:/root/.config
    depends_on:
      - server
      - consumer
    environment:
      - NODE_ENV=development
    links:
      - server
      - consumer

  test_post:
    build: .
    command: ['npm', 'run', 'test:post']
    volumes:
      - '.:/usr/src/app'
      - '/usr/src/app/node_modules'
      - ~/.config/:/root/.config
    depends_on:
      - server
      - consumer
    environment:
      - NODE_ENV=development
    links:
      - server
      - consumer

  redis:
    image: redis:alpine

    
